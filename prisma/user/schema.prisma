generator client {
  provider      = "prisma-client-js"
  output        = "./user"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model User {
  userId    Int       @id @default(autoincrement()) @map("user_id")
  username  String    @unique @map("username")
  password  String    @map("password")
  money     Int       @default(10000) @map("money")
  rating    Int       @default(1000) @map("rating")
  wins      Int       @default(0) @map("wins")
  draws     Int       @default(0) @map("draws")
  loses     Int       @default(0) @map("loses")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  Team       Team[]
  Inventory  Inventory[]
  MatchQueue MatchQueue[]
  User1      MatchHistory[] @relation("User1")
  User2      MatchHistory[] @relation("User2")

  @@map("User")
}

model Team {
  teamId Int @id @default(autoincrement()) @map("team_id")
  // teamPower Int @default(0)

  User   User @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  UserId Int  @map("user_id")

  Inventory   Inventory @relation(fields: [InventoryId], references: [inventoryId], onDelete: Cascade)
  InventoryId Int       @map("inventory_id")

  @@map("Team")
}

model Inventory {
  inventoryId Int @id @default(autoincrement()) @map("inventory_id")
  count       Int @map("count")
  level       Int @map("level")

  User   User @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  UserId Int  @map("user_id")

  PlayerId Int @map("player_id")

  Team Team[]

  @@map("Inventory")
}

model MatchQueue {
  matchQueueId Int @id @default(autoincrement()) @map("match_queue_id")

  User   User @relation(fields: [UserId], references: [userId], onDelete: Cascade)
  UserId Int  @unique @map("user_id")
}

model MatchHistory {
  matchHistroyId Int      @id @default(autoincrement()) @map("match_history_id")
  User1          User     @relation("User1", fields: [myUserId], references: [userId])
  myUserId       Int      @map("myId")
  User2          User     @relation("User2", fields: [opUserId], references: [userId])
  opUserId       Int      @map("opId")
  score1         Int      @map("score1")
  score2         Int      @map("score2")
  createdAt      DateTime @default(now()) @map("created_at")
}
